{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\chinmag\\\\src\\\\components\\\\TransactionMonitor.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionMonitor = ({\n  programId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // 使用公共 RPC 端点\n    const connection = new Connection('https://solana-mainnet.g.alchemy.com/v2/demo', 'confirmed');\n    const parseTransaction = tx => {\n      var _tx$meta;\n      if (!tx.meta || !tx.blockTime) return null;\n      const instructions = tx.transaction.message.instructions.map(instruction => {\n        if (instruction.program) {\n          var _instruction$parsed;\n          return `Program: ${instruction.program}, Type: ${((_instruction$parsed = instruction.parsed) === null || _instruction$parsed === void 0 ? void 0 : _instruction$parsed.type) || 'Unknown'}`;\n        }\n        return `Program ID: ${instruction.programId.toString()}`;\n      });\n      return {\n        signature: tx.transaction.signatures[0],\n        timestamp: tx.blockTime,\n        instructions,\n        status: (_tx$meta = tx.meta) !== null && _tx$meta !== void 0 && _tx$meta.err ? '失败' : '成功'\n      };\n    };\n    const monitorTransactions = async () => {\n      try {\n        setLoading(true);\n        const programPublicKey = new PublicKey(programId);\n        console.log('Fetching signatures for program:', programId);\n        const signatures = await connection.getSignaturesForAddress(programPublicKey, {\n          limit: 20\n        });\n        console.log('Found signatures:', signatures.length);\n        const txs = await Promise.all(signatures.map(async sig => {\n          try {\n            const tx = await connection.getParsedTransaction(sig.signature);\n            console.log('Transaction:', sig.signature, tx ? 'found' : 'not found');\n            return tx;\n          } catch (error) {\n            console.error('Error fetching transaction:', sig.signature, error);\n            return null;\n          }\n        }));\n        const parsedTxs = txs.filter(tx => tx !== null).map(parseTransaction).filter(tx => tx !== null);\n        console.log('Parsed transactions:', parsedTxs.length);\n        setTransactions(parsedTxs);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    monitorTransactions();\n    const interval = setInterval(monitorTransactions, 10000);\n    return () => clearInterval(interval);\n  }, [programId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u4EA4\\u6613\\u76D1\\u63A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6682\\u65E0\\u4EA4\\u6613\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : transactions.map((tx, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u7B7E\\u540D: \", tx.signature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u65F6\\u95F4: \", new Date(tx.timestamp * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u72B6\\u6001: \", tx.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u6307\\u4EE4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tx.instructions.map((instruction, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: instruction\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"TyP27iYvJjbRZitheACbowk3YWM=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["useState","useEffect","Connection","PublicKey","jsxDEV","_jsxDEV","TransactionMonitor","programId","_s","transactions","setTransactions","loading","setLoading","connection","parseTransaction","tx","_tx$meta","meta","blockTime","instructions","transaction","message","map","instruction","program","_instruction$parsed","parsed","type","toString","signature","signatures","timestamp","status","err","monitorTransactions","programPublicKey","console","log","getSignaturesForAddress","limit","length","txs","Promise","all","sig","getParsedTransaction","error","parsedTxs","filter","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","Date","toLocaleString","i","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/chinmag/src/components/TransactionMonitor.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Connection,\r\n  PublicKey,\r\n  ParsedTransactionWithMeta,\r\n} from '@solana/web3.js';\r\n\r\ninterface Transaction {\r\n  signature: string;\r\n  timestamp: number;\r\n  instructions: string[];\r\n  status: string;\r\n}\r\n\r\ninterface TransactionMonitorProps {\r\n  programId: string;\r\n}\r\n\r\nconst TransactionMonitor: React.FC<TransactionMonitorProps> = ({ programId }) => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 使用公共 RPC 端点\r\n    const connection = new Connection(\r\n      'https://solana-mainnet.g.alchemy.com/v2/demo',\r\n      'confirmed'\r\n    );\r\n    \r\n    const parseTransaction = (tx: ParsedTransactionWithMeta): Transaction | null => {\r\n      if (!tx.meta || !tx.blockTime) return null;\r\n\r\n      const instructions = tx.transaction.message.instructions.map((instruction: any) => {\r\n        if (instruction.program) {\r\n          return `Program: ${instruction.program}, Type: ${instruction.parsed?.type || 'Unknown'}`;\r\n        }\r\n        return `Program ID: ${instruction.programId.toString()}`;\r\n      });\r\n\r\n      return {\r\n        signature: tx.transaction.signatures[0],\r\n        timestamp: tx.blockTime,\r\n        instructions,\r\n        status: tx.meta?.err ? '失败' : '成功'\r\n      };\r\n    };\r\n\r\n    const monitorTransactions = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const programPublicKey = new PublicKey(programId);\r\n        \r\n        console.log('Fetching signatures for program:', programId);\r\n        \r\n        const signatures = await connection.getSignaturesForAddress(\r\n          programPublicKey,\r\n          { limit: 20 }\r\n        );\r\n\r\n        console.log('Found signatures:', signatures.length);\r\n\r\n        const txs = await Promise.all(\r\n          signatures.map(async (sig) => {\r\n            try {\r\n              const tx = await connection.getParsedTransaction(sig.signature);\r\n              console.log('Transaction:', sig.signature, tx ? 'found' : 'not found');\r\n              return tx;\r\n            } catch (error) {\r\n              console.error('Error fetching transaction:', sig.signature, error);\r\n              return null;\r\n            }\r\n          })\r\n        );\r\n\r\n        const parsedTxs = txs\r\n          .filter((tx): tx is ParsedTransactionWithMeta => tx !== null)\r\n          .map(parseTransaction)\r\n          .filter((tx): tx is Transaction => tx !== null);\r\n\r\n        console.log('Parsed transactions:', parsedTxs.length);\r\n        setTransactions(parsedTxs);\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    monitorTransactions();\r\n    const interval = setInterval(monitorTransactions, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [programId]);\r\n\r\n  return (\r\n    <div className=\"transaction-monitor\">\r\n      <h2>交易监控</h2>\r\n      {loading ? (\r\n        <p>加载中...</p>\r\n      ) : (\r\n        <div className=\"transactions-list\">\r\n          {transactions.length === 0 ? (\r\n            <p>暂无交易</p>\r\n          ) : (\r\n            transactions.map((tx, index) => (\r\n              <div key={index} className=\"transaction-item\">\r\n                <p>签名: {tx.signature}</p>\r\n                <p>时间: {new Date(tx.timestamp * 1000).toLocaleString()}</p>\r\n                <p>状态: {tx.status}</p>\r\n                <div className=\"instructions\">\r\n                  <p>指令:</p>\r\n                  <ul>\r\n                    {tx.instructions.map((instruction, i) => (\r\n                      <li key={i}>{instruction}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionMonitor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}