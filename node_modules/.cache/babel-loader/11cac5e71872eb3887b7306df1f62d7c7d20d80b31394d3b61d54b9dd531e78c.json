{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\chinmag\\\\src\\\\components\\\\TransactionMonitor.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionMonitor = ({\n  programId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [processedSignatures] = useState(new Set());\n  const [processedTokens] = useState(new Set());\n  const getTokenInfo = async mintAddress => {\n    try {\n      const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mintAccounts: [mintAddress],\n          includeOffChain: true,\n          disableCache: false\n        })\n      });\n      const tokenData = await response.json();\n      if (tokenData && tokenData[0]) {\n        return {\n          address: mintAddress,\n          symbol: tokenData[0].symbol || 'Unknown',\n          name: tokenData[0].name || 'Unknown Token',\n          amount: 0\n        };\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error);\n    }\n    return null;\n  };\n  const getProgramName = instruction => {\n    if ('programId' in instruction) {\n      return instruction.programId.toString();\n    }\n    return 'Unknown';\n  };\n  const monitorTransactions = useCallback(async () => {\n    if (loading) return;\n    try {\n      setLoading(true);\n      const connection = new Connection('https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f', 'confirmed');\n      const programPublicKey = new PublicKey(programId);\n      const tenHoursAgo = Math.floor((Date.now() - 10 * 60 * 60 * 1000) / 1000);\n      let allSignatures = [];\n      let lastSignature = undefined;\n      let retryCount = 0;\n      const maxRetries = 3;\n      while (true) {\n        try {\n          const options = {\n            before: lastSignature,\n            limit: 100 // 减少每次请求的数量\n          };\n\n          // 添加重试逻辑\n          let signatures = [];\n          while (retryCount < maxRetries) {\n            try {\n              signatures = await connection.getSignaturesForAddress(programPublicKey, options);\n              retryCount = 0; // 重置重试计数\n              break;\n            } catch (error) {\n              retryCount++;\n              if (retryCount >= maxRetries) {\n                throw error;\n              }\n              console.log(`Retrying... (${retryCount}/${maxRetries})`);\n              // 指数退避\n              await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, retryCount)));\n            }\n          }\n          if (signatures.length === 0) break;\n          const lastTx = signatures[signatures.length - 1];\n          if (lastTx.blockTime && lastTx.blockTime < tenHoursAgo) {\n            const recentSignatures = signatures.filter(sig => sig.blockTime && sig.blockTime >= tenHoursAgo);\n            allSignatures = [...allSignatures, ...recentSignatures];\n            break;\n          }\n          allSignatures = [...allSignatures, ...signatures];\n          lastSignature = signatures[signatures.length - 1].signature;\n\n          // 增加延迟时间\n          await new Promise(resolve => setTimeout(resolve, 2000));\n\n          // 每处理100个签名后添加额外延迟\n          if (allSignatures.length % 100 === 0) {\n            console.log(`Processed ${allSignatures.length} signatures, taking a break...`);\n            await new Promise(resolve => setTimeout(resolve, 5000));\n          }\n        } catch (error) {\n          console.error('Error fetching signatures:', error);\n          break;\n        }\n      }\n      console.log(`Found ${allSignatures.length} transactions in the last 10 hours`);\n      const newSignatures = allSignatures.filter(sig => !processedSignatures.has(sig.signature));\n      if (newSignatures.length === 0) {\n        setLoading(false);\n        return;\n      }\n      const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n      const processedTokens = new Set();\n      const newTransactions = [];\n\n      // 分批处理交易\n      const batchSize = 10;\n      for (let i = 0; i < newSignatures.length; i += batchSize) {\n        const batch = newSignatures.slice(i, i + batchSize);\n        await Promise.all(batch.map(async sig => {\n          try {\n            await delay(200); // 每个交易增加延迟\n            const tx = await connection.getParsedTransaction(sig.signature, {\n              maxSupportedTransactionVersion: 0,\n              commitment: 'confirmed'\n            });\n            if (tx !== null && tx !== void 0 && tx.meta && tx.blockTime) {\n              const preTokenBalances = tx.meta.preTokenBalances || [];\n              const postTokenBalances = tx.meta.postTokenBalances || [];\n              const changedTokens = Array.from(new Set([...preTokenBalances.map(b => b.mint), ...postTokenBalances.map(b => b.mint)])).filter(mint => !processedTokens.has(mint));\n              if (changedTokens.length === 0) return;\n              const tokenInfos = [];\n              for (const mint of changedTokens) {\n                if (!mint) continue;\n                const tokenInfo = await getTokenInfo(mint);\n                if (tokenInfo) {\n                  var _preTokenBalances$fin, _postTokenBalances$fi;\n                  const preBal = ((_preTokenBalances$fin = preTokenBalances.find(b => b.mint === mint)) === null || _preTokenBalances$fin === void 0 ? void 0 : _preTokenBalances$fin.uiTokenAmount.uiAmount) || 0;\n                  const postBal = ((_postTokenBalances$fi = postTokenBalances.find(b => b.mint === mint)) === null || _postTokenBalances$fi === void 0 ? void 0 : _postTokenBalances$fi.uiTokenAmount.uiAmount) || 0;\n                  const change = postBal - preBal;\n                  tokenInfos.push({\n                    ...tokenInfo,\n                    amount: Math.abs(change),\n                    isInput: change < 0\n                  });\n                  processedTokens.add(mint);\n                }\n              }\n              if (tokenInfos.length > 0) {\n                var _tx$meta;\n                const inputTokens = tokenInfos.filter(t => t.isInput);\n                const outputTokens = tokenInfos.filter(t => !t.isInput);\n                const newTx = {\n                  signature: sig.signature,\n                  timestamp: tx.blockTime,\n                  status: (_tx$meta = tx.meta) !== null && _tx$meta !== void 0 && _tx$meta.err ? 'Failed' : 'Success',\n                  inputToken: inputTokens[0],\n                  outputToken: outputTokens[0],\n                  programName: getProgramName(tx.transaction.message.instructions[0])\n                };\n                newTransactions.push(newTx);\n                processedSignatures.add(sig.signature);\n              }\n            }\n          } catch (error) {\n            console.error('Error processing transaction:', sig.signature, error);\n          }\n        }));\n\n        // 每处理一批后添加延迟\n        await delay(2000);\n      }\n      if (newTransactions.length > 0) {\n        setTransactions(prevTxs => {\n          const allTxs = [...newTransactions, ...prevTxs];\n          return allTxs.sort((a, b) => b.timestamp - a.timestamp);\n        });\n      }\n    } catch (error) {\n      console.error('Error in monitorTransactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [programId, processedSignatures, loading]);\n  useEffect(() => {\n    setTransactions([]);\n    processedSignatures.clear();\n    processedTokens.clear();\n    monitorTransactions();\n    const interval = setInterval(monitorTransactions, 10000);\n    return () => clearInterval(interval);\n  }, [programId]);\n  const openPhotonLink = tokenAddress => {\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transaction Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subtitle\",\n          children: \"Real-time Solana transaction tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: monitorTransactions,\n          disabled: loading,\n          className: \"refresh-button\",\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), \"Loading\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"refresh-icon\",\n              children: \"\\u21BB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), \"Manual Refresh\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-transactions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hint\",\n          children: \"Click refresh to check for new transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), new Date(tx.timestamp * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${tx.status === '成功' ? 'success' : 'failed'}`,\n            children: tx.status === '成功' ? 'Success' : 'Failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap-info\",\n          children: [tx.inputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info input-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Paid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.inputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.inputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.inputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.inputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this), tx.outputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info output-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Received:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.outputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.outputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.outputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.outputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), tx.programName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"program-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Program:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 19\n          }, this), tx.programName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Transaction Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: tx.signature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)]\n      }, tx.signature, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"fVYx5IDAE3PS62RwEfZ3pThIk4o=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["useState","useCallback","useEffect","Connection","PublicKey","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionMonitor","programId","_s","transactions","setTransactions","loading","setLoading","processedSignatures","Set","processedTokens","getTokenInfo","mintAddress","response","fetch","method","headers","body","JSON","stringify","mintAccounts","includeOffChain","disableCache","tokenData","json","address","symbol","name","amount","error","console","getProgramName","instruction","toString","monitorTransactions","connection","programPublicKey","tenHoursAgo","Math","floor","Date","now","allSignatures","lastSignature","undefined","retryCount","maxRetries","options","before","limit","signatures","getSignaturesForAddress","log","Promise","resolve","setTimeout","pow","length","lastTx","blockTime","recentSignatures","filter","sig","signature","newSignatures","has","delay","ms","newTransactions","batchSize","i","batch","slice","all","map","tx","getParsedTransaction","maxSupportedTransactionVersion","commitment","meta","preTokenBalances","postTokenBalances","changedTokens","Array","from","b","mint","tokenInfos","tokenInfo","_preTokenBalances$fin","_postTokenBalances$fi","preBal","find","uiTokenAmount","uiAmount","postBal","change","push","abs","isInput","add","_tx$meta","inputTokens","t","outputTokens","newTx","timestamp","status","err","inputToken","outputToken","programName","transaction","message","instructions","prevTxs","allTxs","sort","a","clear","interval","setInterval","clearInterval","openPhotonLink","tokenAddress","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/chinmag/src/components/TransactionMonitor.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nimport {\r\n  Connection,\r\n  PublicKey,\r\n  ParsedTransactionWithMeta,\r\n  ParsedInstruction,\r\n  PartiallyDecodedInstruction,\r\n  ConfirmedSignatureInfo,\r\n  SignaturesForAddressOptions\r\n} from '@solana/web3.js';\r\n\r\ninterface TokenInfo {\r\n  address: string;\r\n  symbol: string;\r\n  name: string;\r\n  amount: number;\r\n  isInput?: boolean;\r\n}\r\n\r\ninterface Transaction {\r\n  signature: string;\r\n  timestamp: number;\r\n  status: string;\r\n  inputToken?: TokenInfo;\r\n  outputToken?: TokenInfo;\r\n  programName?: string;\r\n}\r\n\r\ninterface TransactionMonitorProps {\r\n  programId: string;\r\n}\r\n\r\nconst TransactionMonitor: React.FC<TransactionMonitorProps> = ({ programId }) => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [processedSignatures] = useState<Set<string>>(new Set());\r\n  const [processedTokens] = useState<Set<string>>(new Set());\r\n\r\n  const getTokenInfo = async (mintAddress: string) => {\r\n    try {\r\n      const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          mintAccounts: [mintAddress],\r\n          includeOffChain: true,\r\n          disableCache: false\r\n        })\r\n      });\r\n      \r\n      const tokenData = await response.json();\r\n      if (tokenData && tokenData[0]) {\r\n        return {\r\n          address: mintAddress,\r\n          symbol: tokenData[0].symbol || 'Unknown',\r\n          name: tokenData[0].name || 'Unknown Token',\r\n          amount: 0\r\n        } as TokenInfo;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching token info:', error);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getProgramName = (instruction: ParsedInstruction | PartiallyDecodedInstruction): string => {\r\n    if ('programId' in instruction) {\r\n      return instruction.programId.toString();\r\n    }\r\n    return 'Unknown';\r\n  };\r\n\r\n  const monitorTransactions = useCallback(async () => {\r\n    if (loading) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      const connection = new Connection(\r\n        'https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f',\r\n        'confirmed'\r\n      );\r\n\r\n      const programPublicKey = new PublicKey(programId);\r\n      const tenHoursAgo = Math.floor((Date.now() - 10 * 60 * 60 * 1000) / 1000);\r\n      \r\n      let allSignatures: ConfirmedSignatureInfo[] = [];\r\n      let lastSignature: string | undefined = undefined;\r\n      let retryCount = 0;\r\n      const maxRetries = 3;\r\n      \r\n      while (true) {\r\n        try {\r\n          const options: SignaturesForAddressOptions = {\r\n            before: lastSignature,\r\n            limit: 100  // 减少每次请求的数量\r\n          };\r\n\r\n          // 添加重试逻辑\r\n          let signatures: ConfirmedSignatureInfo[] = [];\r\n          while (retryCount < maxRetries) {\r\n            try {\r\n              signatures = await connection.getSignaturesForAddress(\r\n                programPublicKey,\r\n                options\r\n              );\r\n              retryCount = 0; // 重置重试计数\r\n              break;\r\n            } catch (error) {\r\n              retryCount++;\r\n              if (retryCount >= maxRetries) {\r\n                throw error;\r\n              }\r\n              console.log(`Retrying... (${retryCount}/${maxRetries})`);\r\n              // 指数退避\r\n              await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, retryCount)));\r\n            }\r\n          }\r\n\r\n          if (signatures.length === 0) break;\r\n\r\n          const lastTx = signatures[signatures.length - 1];\r\n          if (lastTx.blockTime && lastTx.blockTime < tenHoursAgo) {\r\n            const recentSignatures = signatures.filter(\r\n              (sig: ConfirmedSignatureInfo) => sig.blockTime && sig.blockTime >= tenHoursAgo\r\n            );\r\n            allSignatures = [...allSignatures, ...recentSignatures];\r\n            break;\r\n          }\r\n\r\n          allSignatures = [...allSignatures, ...signatures];\r\n          lastSignature = signatures[signatures.length - 1].signature;\r\n          \r\n          // 增加延迟时间\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n          \r\n          // 每处理100个签名后添加额外延迟\r\n          if (allSignatures.length % 100 === 0) {\r\n            console.log(`Processed ${allSignatures.length} signatures, taking a break...`);\r\n            await new Promise(resolve => setTimeout(resolve, 5000));\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching signatures:', error);\r\n          break;\r\n        }\r\n      }\r\n\r\n      console.log(`Found ${allSignatures.length} transactions in the last 10 hours`);\r\n\r\n      const newSignatures = allSignatures.filter(sig => !processedSignatures.has(sig.signature));\r\n      \r\n      if (newSignatures.length === 0) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n      const processedTokens = new Set<string>();\r\n      const newTransactions: Transaction[] = [];\r\n\r\n      // 分批处理交易\r\n      const batchSize = 10;\r\n      for (let i = 0; i < newSignatures.length; i += batchSize) {\r\n        const batch = newSignatures.slice(i, i + batchSize);\r\n        \r\n        await Promise.all(batch.map(async (sig) => {\r\n          try {\r\n            await delay(200); // 每个交易增加延迟\r\n            const tx = await connection.getParsedTransaction(\r\n              sig.signature,\r\n              {\r\n                maxSupportedTransactionVersion: 0,\r\n                commitment: 'confirmed'\r\n              }\r\n            );\r\n\r\n            if (tx?.meta && tx.blockTime) {\r\n              const preTokenBalances = tx.meta.preTokenBalances || [];\r\n              const postTokenBalances = tx.meta.postTokenBalances || [];\r\n              \r\n              const changedTokens = Array.from(new Set([\r\n                ...preTokenBalances.map(b => b.mint),\r\n                ...postTokenBalances.map(b => b.mint)\r\n              ])).filter(mint => !processedTokens.has(mint));\r\n\r\n              if (changedTokens.length === 0) return;\r\n\r\n              const tokenInfos: TokenInfo[] = [];\r\n              \r\n              for (const mint of changedTokens) {\r\n                if (!mint) continue;\r\n                const tokenInfo = await getTokenInfo(mint);\r\n                if (tokenInfo) {\r\n                  const preBal = preTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\r\n                  const postBal = postTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\r\n                  const change = postBal - preBal;\r\n                  \r\n                  tokenInfos.push({\r\n                    ...tokenInfo,\r\n                    amount: Math.abs(change),\r\n                    isInput: change < 0\r\n                  });\r\n                  \r\n                  processedTokens.add(mint);\r\n                }\r\n              }\r\n\r\n              if (tokenInfos.length > 0) {\r\n                const inputTokens = tokenInfos.filter(t => t.isInput);\r\n                const outputTokens = tokenInfos.filter(t => !t.isInput);\r\n\r\n                const newTx: Transaction = {\r\n                  signature: sig.signature,\r\n                  timestamp: tx.blockTime,\r\n                  status: tx.meta?.err ? 'Failed' : 'Success',\r\n                  inputToken: inputTokens[0],\r\n                  outputToken: outputTokens[0],\r\n                  programName: getProgramName(tx.transaction.message.instructions[0])\r\n                };\r\n\r\n                newTransactions.push(newTx);\r\n                processedSignatures.add(sig.signature);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error('Error processing transaction:', sig.signature, error);\r\n          }\r\n        }));\r\n\r\n        // 每处理一批后添加延迟\r\n        await delay(2000);\r\n      }\r\n\r\n      if (newTransactions.length > 0) {\r\n        setTransactions(prevTxs => {\r\n          const allTxs = [...newTransactions, ...prevTxs];\r\n          return allTxs.sort((a, b) => b.timestamp - a.timestamp);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in monitorTransactions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [programId, processedSignatures, loading]);\r\n\r\n  useEffect(() => {\r\n    setTransactions([]);\r\n    processedSignatures.clear();\r\n    processedTokens.clear();\r\n    monitorTransactions();\r\n    \r\n    const interval = setInterval(monitorTransactions, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [programId]);\r\n\r\n  const openPhotonLink = (tokenAddress: string) => {\r\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-monitor\">\r\n      <div className=\"monitor-header\">\r\n        <div className=\"title-section\">\r\n          <h2>Transaction Monitor</h2>\r\n          <span className=\"subtitle\">Real-time Solana transaction tracking</span>\r\n        </div>\r\n        <div className=\"refresh-container\">\r\n          <button \r\n            onClick={monitorTransactions} \r\n            disabled={loading}\r\n            className=\"refresh-button\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Loading\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"refresh-icon\">↻</span>\r\n                Manual Refresh\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"transactions-list\">\r\n        {transactions.length === 0 ? (\r\n          <div className=\"no-transactions\">\r\n            <p>No transactions found</p>\r\n            <span className=\"hint\">Click refresh to check for new transactions</span>\r\n          </div>\r\n        ) : (\r\n          transactions.map((tx) => (\r\n            <div key={tx.signature} className=\"transaction-item\">\r\n              <div className=\"transaction-header\">\r\n                <div className=\"timestamp\">\r\n                  <span className=\"label\">Time:</span>\r\n                  {new Date(tx.timestamp * 1000).toLocaleString()}\r\n                </div>\r\n                <div className={`status ${tx.status === '成功' ? 'success' : 'failed'}`}>\r\n                  {tx.status === '成功' ? 'Success' : 'Failed'}\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-info\">\r\n                {tx.inputToken && (\r\n                  <div className=\"token-info input-token\">\r\n                    <div className=\"token-amount\">\r\n                      <span className=\"label\">Paid:</span>\r\n                      <span className=\"amount\">{tx.inputToken.amount}</span>\r\n                      <span className=\"symbol\">{tx.inputToken.symbol}</span>\r\n                    </div>\r\n                    <button \r\n                      className=\"photon-link-button\"\r\n                      onClick={() => openPhotonLink(tx.inputToken!.address)}\r\n                    >\r\n                      View on Photon LP\r\n                      <span className=\"address\">({tx.inputToken.address})</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {tx.outputToken && (\r\n                  <div className=\"token-info output-token\">\r\n                    <div className=\"token-amount\">\r\n                      <span className=\"label\">Received:</span>\r\n                      <span className=\"amount\">{tx.outputToken.amount}</span>\r\n                      <span className=\"symbol\">{tx.outputToken.symbol}</span>\r\n                    </div>\r\n                    <button \r\n                      className=\"photon-link-button\"\r\n                      onClick={() => openPhotonLink(tx.outputToken!.address)}\r\n                    >\r\n                      View on Photon LP\r\n                      <span className=\"address\">({tx.outputToken.address})</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {tx.programName && (\r\n                <div className=\"program-name\">\r\n                  <span className=\"label\">Program:</span>\r\n                  {tx.programName}\r\n                </div>\r\n              )}\r\n              <div className=\"signature\">\r\n                <span className=\"label\">Transaction Signature:</span>\r\n                <span className=\"value\">{tx.signature}</span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionMonitor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}