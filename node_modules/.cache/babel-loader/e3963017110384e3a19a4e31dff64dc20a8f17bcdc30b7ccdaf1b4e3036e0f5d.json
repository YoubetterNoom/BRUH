{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\chinmag\\\\src\\\\components\\\\TransactionMonitor.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getProgramName = instruction => {\n  if ('program' in instruction) {\n    return instruction.program;\n  }\n  if ('programId' in instruction) {\n    return instruction.programId.toString();\n  }\n  return 'Unknown';\n};\nconst getTokenMarketCap = async mintAddress => {\n  try {\n    var _data$data, _data$data2;\n    console.log('Fetching market cap for:', mintAddress);\n    const response = await fetch(`https://price.jup.ag/v4/token/${mintAddress}`);\n    const data = await response.json();\n    console.log('Jupiter API response:', data);\n    if (data !== null && data !== void 0 && (_data$data = data.data) !== null && _data$data !== void 0 && _data$data.price && data !== null && data !== void 0 && (_data$data2 = data.data) !== null && _data$data2 !== void 0 && _data$data2.supply) {\n      const marketCap = data.data.price * data.data.supply;\n      console.log('Calculated market cap:', marketCap);\n      return marketCap;\n    } else {\n      console.log('Missing price or supply data:', data);\n    }\n  } catch (error) {\n    console.error('Error fetching market cap:', error);\n  }\n  return undefined;\n};\nconst getTokenInfo = async mintAddress => {\n  try {\n    console.log('Fetching token info for:', mintAddress);\n    const [tokenData, marketCap] = await Promise.all([fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mintAccounts: [mintAddress],\n        includeOffChain: true,\n        disableCache: false\n      })\n    }).then(res => res.json()), getTokenMarketCap(mintAddress)]);\n    console.log('Token metadata:', tokenData);\n    console.log('Market cap:', marketCap);\n    if (tokenData && tokenData[0]) {\n      const tokenInfo = {\n        address: mintAddress,\n        symbol: tokenData[0].symbol || 'Unknown',\n        name: tokenData[0].name || 'Unknown Token',\n        amount: 0,\n        marketCap: marketCap\n      };\n      console.log('Created token info:', tokenInfo);\n      return tokenInfo;\n    }\n  } catch (error) {\n    console.error('Error fetching token info:', error);\n  }\n  return null;\n};\nconst TransactionMonitor = ({\n  programId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [processedSignatures] = useState(new Set());\n  const [uniqueTokens, setUniqueTokens] = useState(new Set());\n  const openPhotonLink = tokenAddress => {\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\n  };\n  const monitorTransactions = useCallback(async () => {\n    try {\n      setLoading(true);\n      console.log('Starting transaction monitoring for program:', programId);\n      const connection = new Connection('https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f', 'confirmed');\n      const programPublicKey = new PublicKey(programId);\n      console.log('Fetching signatures...');\n      const signatures = await connection.getSignaturesForAddress(programPublicKey, {\n        limit: 10\n      });\n      console.log('Found signatures:', signatures.length);\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\n      if (newSignatures.length === 0) {\n        setLoading(false);\n        return;\n      }\n      const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n      const txs = [];\n      const newUniqueTokens = new Set(uniqueTokens);\n      for (const sig of newSignatures) {\n        try {\n          console.log('Processing signature:', sig.signature);\n          await delay(500);\n          const tx = await connection.getParsedTransaction(sig.signature, {\n            maxSupportedTransactionVersion: 0,\n            commitment: 'confirmed'\n          });\n          if (tx !== null && tx !== void 0 && tx.meta && tx.blockTime) {\n            console.log('Transaction found:', sig.signature);\n            const preTokenBalances = tx.meta.preTokenBalances || [];\n            const postTokenBalances = tx.meta.postTokenBalances || [];\n            console.log('Pre-token balances:', preTokenBalances);\n            console.log('Post-token balances:', postTokenBalances);\n            const changedTokens = new Set([...preTokenBalances.map(b => b.mint), ...postTokenBalances.map(b => b.mint)]);\n            console.log('Changed tokens:', changedTokens);\n            const tokenPromises = Array.from(changedTokens).map(async mint => {\n              var _preTokenBalances$fin, _postTokenBalances$fi;\n              if (!mint) return null;\n              if (newUniqueTokens.has(mint)) return null;\n              const tokenInfo = await getTokenInfo(mint);\n              if (!tokenInfo) return null;\n              newUniqueTokens.add(mint);\n              const preBal = ((_preTokenBalances$fin = preTokenBalances.find(b => b.mint === mint)) === null || _preTokenBalances$fin === void 0 ? void 0 : _preTokenBalances$fin.uiTokenAmount.uiAmount) || 0;\n              const postBal = ((_postTokenBalances$fi = postTokenBalances.find(b => b.mint === mint)) === null || _postTokenBalances$fi === void 0 ? void 0 : _postTokenBalances$fi.uiTokenAmount.uiAmount) || 0;\n              const change = postBal - preBal;\n              return {\n                ...tokenInfo,\n                amount: Math.abs(change),\n                isInput: change < 0\n              };\n            });\n            const tokens = (await Promise.all(tokenPromises)).filter(t => t !== null);\n            console.log('Processed tokens:', tokens);\n            if (tokens.length > 0) {\n              var _tx$meta;\n              const inputTokens = tokens.filter(t => t === null || t === void 0 ? void 0 : t.isInput);\n              const outputTokens = tokens.filter(t => !(t !== null && t !== void 0 && t.isInput));\n              const firstInstruction = tx.transaction.message.instructions[0];\n              const programName = firstInstruction ? getProgramName(firstInstruction) : 'Unknown';\n              const newTx = {\n                signature: sig.signature,\n                timestamp: tx.blockTime,\n                status: (_tx$meta = tx.meta) !== null && _tx$meta !== void 0 && _tx$meta.err ? '失败' : '成功',\n                inputToken: inputTokens[0] || undefined,\n                outputToken: outputTokens[0] || undefined,\n                programName\n              };\n              console.log('Adding new transaction:', newTx);\n              txs.push(newTx);\n              processedSignatures.add(sig.signature);\n            }\n          }\n        } catch (error) {\n          console.error('Error processing transaction:', sig.signature, error);\n        }\n      }\n      if (txs.length > 0) {\n        setTransactions(prevTxs => [...txs, ...prevTxs]);\n        setUniqueTokens(newUniqueTokens);\n      }\n    } catch (error) {\n      console.error('Error in monitorTransactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [programId, processedSignatures, uniqueTokens]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transaction Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subtitle\",\n          children: \"Real-time Solana transaction tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: monitorTransactions,\n          disabled: loading,\n          className: \"refresh-button\",\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), \"Loading\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"refresh-icon\",\n              children: \"\\u21BB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), \"Refresh\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-transactions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hint\",\n          children: \"Click refresh to check for new transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), new Date(tx.timestamp * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${tx.status === '成功' ? 'success' : 'failed'}`,\n            children: tx.status === '成功' ? 'Success' : 'Failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap-info\",\n          children: [tx.inputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info input-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Paid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.inputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.inputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this), typeof tx.inputToken.marketCap === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-cap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Market Cap:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [\"$\", new Intl.NumberFormat('en-US', {\n                  notation: 'compact',\n                  maximumFractionDigits: 2\n                }).format(tx.inputToken.marketCap)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.inputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.inputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 19\n          }, this), tx.outputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info output-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Received:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.outputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.outputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this), typeof tx.outputToken.marketCap === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-cap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Market Cap:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value\",\n                children: [\"$\", new Intl.NumberFormat('en-US', {\n                  notation: 'compact',\n                  maximumFractionDigits: 2\n                }).format(tx.outputToken.marketCap)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.outputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.outputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), tx.programName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"program-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Program:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this), tx.programName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Transaction Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: tx.signature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, tx.signature, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"zVdr/S6HMTyC//xtt+jtNHiqdv4=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["useState","useCallback","Connection","PublicKey","jsxDEV","_jsxDEV","Fragment","_Fragment","getProgramName","instruction","program","programId","toString","getTokenMarketCap","mintAddress","_data$data","_data$data2","console","log","response","fetch","data","json","price","supply","marketCap","error","undefined","getTokenInfo","tokenData","Promise","all","method","headers","body","JSON","stringify","mintAccounts","includeOffChain","disableCache","then","res","tokenInfo","address","symbol","name","amount","TransactionMonitor","_s","transactions","setTransactions","loading","setLoading","processedSignatures","Set","uniqueTokens","setUniqueTokens","openPhotonLink","tokenAddress","window","open","monitorTransactions","connection","programPublicKey","signatures","getSignaturesForAddress","limit","length","newSignatures","filter","sig","has","signature","delay","ms","resolve","setTimeout","txs","newUniqueTokens","tx","getParsedTransaction","maxSupportedTransactionVersion","commitment","meta","blockTime","preTokenBalances","postTokenBalances","changedTokens","map","b","mint","tokenPromises","Array","from","_preTokenBalances$fin","_postTokenBalances$fi","add","preBal","find","uiTokenAmount","uiAmount","postBal","change","Math","abs","isInput","tokens","t","_tx$meta","inputTokens","outputTokens","firstInstruction","transaction","message","instructions","programName","newTx","timestamp","status","err","inputToken","outputToken","push","prevTxs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Date","toLocaleString","Intl","NumberFormat","notation","maximumFractionDigits","format","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/chinmag/src/components/TransactionMonitor.tsx"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport {\r\n  Connection,\r\n  PublicKey,\r\n  ParsedTransactionWithMeta,\r\n  ParsedInstruction,\r\n  PartiallyDecodedInstruction,\r\n} from '@solana/web3.js';\r\n\r\ninterface TokenInfo {\r\n  address: string;\r\n  symbol: string;\r\n  name: string;\r\n  amount: number;\r\n  marketCap?: number;\r\n}\r\n\r\ninterface Transaction {\r\n  signature: string;\r\n  timestamp: number;\r\n  status: string;\r\n  inputToken?: TokenInfo;\r\n  outputToken?: TokenInfo;\r\n  programName?: string;\r\n}\r\n\r\ninterface SPLTokenInstruction {\r\n  program: string;\r\n  parsed: {\r\n    type: string;\r\n    info: {\r\n      mint: string;\r\n      tokenAmount: {\r\n        uiAmount: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\ninterface TransactionMonitorProps {\r\n  programId: string;\r\n}\r\n\r\nconst getProgramName = (instruction: ParsedInstruction | PartiallyDecodedInstruction): string => {\r\n  if ('program' in instruction) {\r\n    return instruction.program;\r\n  }\r\n  if ('programId' in instruction) {\r\n    return instruction.programId.toString();\r\n  }\r\n  return 'Unknown';\r\n};\r\n\r\nconst getTokenMarketCap = async (mintAddress: string) => {\r\n  try {\r\n    console.log('Fetching market cap for:', mintAddress);\r\n    const response = await fetch(`https://price.jup.ag/v4/token/${mintAddress}`);\r\n    const data = await response.json();\r\n    console.log('Jupiter API response:', data);\r\n    \r\n    if (data?.data?.price && data?.data?.supply) {\r\n      const marketCap = data.data.price * data.data.supply;\r\n      console.log('Calculated market cap:', marketCap);\r\n      return marketCap;\r\n    } else {\r\n      console.log('Missing price or supply data:', data);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching market cap:', error);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nconst getTokenInfo = async (mintAddress: string) => {\r\n  try {\r\n    console.log('Fetching token info for:', mintAddress);\r\n    const [tokenData, marketCap] = await Promise.all([\r\n      fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          mintAccounts: [mintAddress],\r\n          includeOffChain: true,\r\n          disableCache: false\r\n        })\r\n      }).then(res => res.json()),\r\n      getTokenMarketCap(mintAddress)\r\n    ]);\r\n    \r\n    console.log('Token metadata:', tokenData);\r\n    console.log('Market cap:', marketCap);\r\n\r\n    if (tokenData && tokenData[0]) {\r\n      const tokenInfo = {\r\n        address: mintAddress,\r\n        symbol: tokenData[0].symbol || 'Unknown',\r\n        name: tokenData[0].name || 'Unknown Token',\r\n        amount: 0,\r\n        marketCap: marketCap\r\n      };\r\n      console.log('Created token info:', tokenInfo);\r\n      return tokenInfo;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching token info:', error);\r\n  }\r\n  return null;\r\n};\r\n\r\nconst TransactionMonitor: React.FC<TransactionMonitorProps> = ({ programId }) => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [processedSignatures] = useState<Set<string>>(new Set());\r\n  const [uniqueTokens, setUniqueTokens] = useState<Set<string>>(new Set());\r\n\r\n  const openPhotonLink = (tokenAddress: string) => {\r\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\r\n  };\r\n\r\n  const monitorTransactions = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Starting transaction monitoring for program:', programId);\r\n\r\n      const connection = new Connection(\r\n        'https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f',\r\n        'confirmed'\r\n      );\r\n\r\n      const programPublicKey = new PublicKey(programId);\r\n      \r\n      console.log('Fetching signatures...');\r\n      const signatures = await connection.getSignaturesForAddress(\r\n        programPublicKey,\r\n        { limit: 10 }\r\n      );\r\n\r\n      console.log('Found signatures:', signatures.length);\r\n\r\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\r\n      \r\n      if (newSignatures.length === 0) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n      const txs: Transaction[] = [];\r\n      const newUniqueTokens = new Set<string>(uniqueTokens);\r\n\r\n      for (const sig of newSignatures) {\r\n        try {\r\n          console.log('Processing signature:', sig.signature);\r\n          await delay(500);\r\n          const tx = await connection.getParsedTransaction(\r\n            sig.signature,\r\n            {\r\n              maxSupportedTransactionVersion: 0,\r\n              commitment: 'confirmed'\r\n            }\r\n          );\r\n          \r\n          if (tx?.meta && tx.blockTime) {\r\n            console.log('Transaction found:', sig.signature);\r\n            \r\n            const preTokenBalances = tx.meta.preTokenBalances || [];\r\n            const postTokenBalances = tx.meta.postTokenBalances || [];\r\n            \r\n            console.log('Pre-token balances:', preTokenBalances);\r\n            console.log('Post-token balances:', postTokenBalances);\r\n\r\n            const changedTokens = new Set([\r\n              ...preTokenBalances.map(b => b.mint),\r\n              ...postTokenBalances.map(b => b.mint)\r\n            ]);\r\n\r\n            console.log('Changed tokens:', changedTokens);\r\n\r\n            const tokenPromises = Array.from(changedTokens).map(async mint => {\r\n              if (!mint) return null;\r\n              if (newUniqueTokens.has(mint)) return null;\r\n              \r\n              const tokenInfo = await getTokenInfo(mint);\r\n              if (!tokenInfo) return null;\r\n\r\n              newUniqueTokens.add(mint);\r\n\r\n              const preBal = preTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\r\n              const postBal = postTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\r\n              const change = postBal - preBal;\r\n\r\n              return {\r\n                ...tokenInfo,\r\n                amount: Math.abs(change),\r\n                isInput: change < 0\r\n              };\r\n            });\r\n\r\n            const tokens = (await Promise.all(tokenPromises)).filter(t => t !== null);\r\n            console.log('Processed tokens:', tokens);\r\n\r\n            if (tokens.length > 0) {\r\n              const inputTokens = tokens.filter(t => t?.isInput);\r\n              const outputTokens = tokens.filter(t => !t?.isInput);\r\n\r\n              const firstInstruction = tx.transaction.message.instructions[0];\r\n              const programName = firstInstruction ? getProgramName(firstInstruction) : 'Unknown';\r\n\r\n              const newTx = {\r\n                signature: sig.signature,\r\n                timestamp: tx.blockTime,\r\n                status: tx.meta?.err ? '失败' : '成功',\r\n                inputToken: inputTokens[0] || undefined,\r\n                outputToken: outputTokens[0] || undefined,\r\n                programName\r\n              };\r\n\r\n              console.log('Adding new transaction:', newTx);\r\n              txs.push(newTx);\r\n              processedSignatures.add(sig.signature);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error processing transaction:', sig.signature, error);\r\n        }\r\n      }\r\n\r\n      if (txs.length > 0) {\r\n        setTransactions(prevTxs => [...txs, ...prevTxs]);\r\n        setUniqueTokens(newUniqueTokens);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in monitorTransactions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [programId, processedSignatures, uniqueTokens]);\r\n\r\n  return (\r\n    <div className=\"transaction-monitor\">\r\n      <div className=\"monitor-header\">\r\n        <div className=\"title-section\">\r\n          <h2>Transaction Monitor</h2>\r\n          <span className=\"subtitle\">Real-time Solana transaction tracking</span>\r\n        </div>\r\n        <div className=\"refresh-container\">\r\n          <button \r\n            onClick={monitorTransactions} \r\n            disabled={loading}\r\n            className=\"refresh-button\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Loading\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"refresh-icon\">↻</span>\r\n                Refresh\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"transactions-list\">\r\n        {transactions.length === 0 ? (\r\n          <div className=\"no-transactions\">\r\n            <p>No transactions found</p>\r\n            <span className=\"hint\">Click refresh to check for new transactions</span>\r\n          </div>\r\n        ) : (\r\n          transactions.map((tx) => (\r\n            <div key={tx.signature} className=\"transaction-item\">\r\n              <div className=\"transaction-header\">\r\n                <div className=\"timestamp\">\r\n                  <span className=\"label\">Time:</span>\r\n                  {new Date(tx.timestamp * 1000).toLocaleString()}\r\n                </div>\r\n                <div className={`status ${tx.status === '成功' ? 'success' : 'failed'}`}>\r\n                  {tx.status === '成功' ? 'Success' : 'Failed'}\r\n                </div>\r\n              </div>\r\n              <div className=\"swap-info\">\r\n                {tx.inputToken && (\r\n                  <div className=\"token-info input-token\">\r\n                    <div className=\"token-amount\">\r\n                      <span className=\"label\">Paid:</span>\r\n                      <span className=\"amount\">{tx.inputToken.amount}</span>\r\n                      <span className=\"symbol\">{tx.inputToken.symbol}</span>\r\n                    </div>\r\n                    {typeof tx.inputToken.marketCap === 'number' && (\r\n                      <div className=\"market-cap\">\r\n                        <span className=\"label\">Market Cap:</span>\r\n                        <span className=\"value\">\r\n                          ${new Intl.NumberFormat('en-US', {\r\n                            notation: 'compact',\r\n                            maximumFractionDigits: 2\r\n                          }).format(tx.inputToken.marketCap)}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    <button \r\n                      className=\"photon-link-button\"\r\n                      onClick={() => openPhotonLink(tx.inputToken!.address)}\r\n                    >\r\n                      View on Photon LP\r\n                      <span className=\"address\">({tx.inputToken.address})</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {tx.outputToken && (\r\n                  <div className=\"token-info output-token\">\r\n                    <div className=\"token-amount\">\r\n                      <span className=\"label\">Received:</span>\r\n                      <span className=\"amount\">{tx.outputToken.amount}</span>\r\n                      <span className=\"symbol\">{tx.outputToken.symbol}</span>\r\n                    </div>\r\n                    {typeof tx.outputToken.marketCap === 'number' && (\r\n                      <div className=\"market-cap\">\r\n                        <span className=\"label\">Market Cap:</span>\r\n                        <span className=\"value\">\r\n                          ${new Intl.NumberFormat('en-US', {\r\n                            notation: 'compact',\r\n                            maximumFractionDigits: 2\r\n                          }).format(tx.outputToken.marketCap)}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    <button \r\n                      className=\"photon-link-button\"\r\n                      onClick={() => openPhotonLink(tx.outputToken!.address)}\r\n                    >\r\n                      View on Photon LP\r\n                      <span className=\"address\">({tx.outputToken.address})</span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {tx.programName && (\r\n                <div className=\"program-name\">\r\n                  <span className=\"label\">Program:</span>\r\n                  {tx.programName}\r\n                </div>\r\n              )}\r\n              <div className=\"signature\">\r\n                <span className=\"label\">Transaction Signature:</span>\r\n                <span className=\"value\">{tx.signature}</span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionMonitor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}