{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\chinmag\\\\src\\\\components\\\\TransactionMonitor.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionMonitor = ({\n  programId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [processedSignatures] = useState(new Set());\n  const [processedTokens] = useState(new Set());\n  const getTokenInfo = async mintAddress => {\n    try {\n      const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          mintAccounts: [mintAddress],\n          includeOffChain: true,\n          disableCache: false\n        })\n      });\n      const tokenData = await response.json();\n      if (tokenData && tokenData[0]) {\n        return {\n          address: mintAddress,\n          symbol: tokenData[0].symbol || 'Unknown',\n          name: tokenData[0].name || 'Unknown Token',\n          amount: 0\n        };\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error);\n    }\n    return null;\n  };\n  const getProgramName = instruction => {\n    if ('programId' in instruction) {\n      return instruction.programId.toString();\n    }\n    return 'Unknown';\n  };\n  const monitorTransactions = useCallback(async () => {\n    if (loading) return;\n    try {\n      setLoading(true);\n      const connection = new Connection('https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f', 'confirmed');\n      const programPublicKey = new PublicKey(programId);\n      const signatures = await connection.getSignaturesForAddress(programPublicKey, {\n        limit: 10\n      });\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\n      if (newSignatures.length === 0) {\n        setLoading(false);\n        return;\n      }\n      const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n      const newTransactions = [];\n      for (const sig of newSignatures) {\n        try {\n          await delay(500);\n          const tx = await connection.getParsedTransaction(sig.signature, {\n            maxSupportedTransactionVersion: 0,\n            commitment: 'confirmed'\n          });\n          if (tx !== null && tx !== void 0 && tx.meta && tx.blockTime) {\n            const preTokenBalances = tx.meta.preTokenBalances || [];\n            const postTokenBalances = tx.meta.postTokenBalances || [];\n            const changedTokens = Array.from(new Set([...preTokenBalances.map(b => b.mint), ...postTokenBalances.map(b => b.mint)])).filter(mint => !processedTokens.has(mint));\n            if (changedTokens.length === 0) continue;\n            const tokenInfos = [];\n            for (const mint of changedTokens) {\n              if (!mint) continue;\n              const tokenInfo = await getTokenInfo(mint);\n              if (tokenInfo) {\n                var _preTokenBalances$fin, _postTokenBalances$fi;\n                const preBal = ((_preTokenBalances$fin = preTokenBalances.find(b => b.mint === mint)) === null || _preTokenBalances$fin === void 0 ? void 0 : _preTokenBalances$fin.uiTokenAmount.uiAmount) || 0;\n                const postBal = ((_postTokenBalances$fi = postTokenBalances.find(b => b.mint === mint)) === null || _postTokenBalances$fi === void 0 ? void 0 : _postTokenBalances$fi.uiTokenAmount.uiAmount) || 0;\n                const change = postBal - preBal;\n                tokenInfos.push({\n                  ...tokenInfo,\n                  amount: Math.abs(change),\n                  isInput: change < 0\n                });\n                processedTokens.add(mint);\n              }\n            }\n            if (tokenInfos.length > 0) {\n              var _tx$meta;\n              const inputTokens = tokenInfos.filter(t => t.isInput);\n              const outputTokens = tokenInfos.filter(t => !t.isInput);\n              const newTx = {\n                signature: sig.signature,\n                timestamp: tx.blockTime,\n                status: (_tx$meta = tx.meta) !== null && _tx$meta !== void 0 && _tx$meta.err ? 'Failed' : 'Success',\n                inputToken: inputTokens[0],\n                outputToken: outputTokens[0],\n                programName: getProgramName(tx.transaction.message.instructions[0])\n              };\n              newTransactions.push(newTx);\n              processedSignatures.add(sig.signature);\n            }\n          }\n        } catch (error) {\n          console.error('Error processing transaction:', sig.signature, error);\n        }\n      }\n      if (newTransactions.length > 0) {\n        setTransactions(prevTxs => [...newTransactions, ...prevTxs]);\n      }\n    } catch (error) {\n      console.error('Error in monitorTransactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [programId, processedSignatures, processedTokens, loading]);\n  useEffect(() => {\n    setTransactions([]);\n    processedSignatures.clear();\n    processedTokens.clear();\n    monitorTransactions();\n    const interval = setInterval(monitorTransactions, 10000);\n    return () => clearInterval(interval);\n  }, [programId]);\n  const openPhotonLink = tokenAddress => {\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Transaction Monitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subtitle\",\n          children: \"Real-time Solana transaction tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: monitorTransactions,\n          disabled: loading,\n          className: \"refresh-button\",\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), \"Loading\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"refresh-icon\",\n              children: \"\\u21BB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), \"Manual Refresh\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-transactions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transactions found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hint\",\n          children: \"Click refresh to check for new transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), new Date(tx.timestamp * 1000).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${tx.status === '成功' ? 'success' : 'failed'}`,\n            children: tx.status === '成功' ? 'Success' : 'Failed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap-info\",\n          children: [tx.inputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info input-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Paid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.inputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.inputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.inputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.inputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this), tx.outputToken && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info output-token\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-amount\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label\",\n                children: \"Received:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: tx.outputToken.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"symbol\",\n                children: tx.outputToken.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"photon-link-button\",\n              onClick: () => openPhotonLink(tx.outputToken.address),\n              children: [\"View on Photon LP\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"address\",\n                children: [\"(\", tx.outputToken.address, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), tx.programName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"program-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Program:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this), tx.programName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signature\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Transaction Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: tx.signature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, tx.signature, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"fVYx5IDAE3PS62RwEfZ3pThIk4o=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["useState","useCallback","useEffect","Connection","PublicKey","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionMonitor","programId","_s","transactions","setTransactions","loading","setLoading","processedSignatures","Set","processedTokens","getTokenInfo","mintAddress","response","fetch","method","headers","body","JSON","stringify","mintAccounts","includeOffChain","disableCache","tokenData","json","address","symbol","name","amount","error","console","getProgramName","instruction","toString","monitorTransactions","connection","programPublicKey","signatures","getSignaturesForAddress","limit","newSignatures","filter","sig","has","signature","length","delay","ms","Promise","resolve","setTimeout","newTransactions","tx","getParsedTransaction","maxSupportedTransactionVersion","commitment","meta","blockTime","preTokenBalances","postTokenBalances","changedTokens","Array","from","map","b","mint","tokenInfos","tokenInfo","_preTokenBalances$fin","_postTokenBalances$fi","preBal","find","uiTokenAmount","uiAmount","postBal","change","push","Math","abs","isInput","add","_tx$meta","inputTokens","t","outputTokens","newTx","timestamp","status","err","inputToken","outputToken","programName","transaction","message","instructions","prevTxs","clear","interval","setInterval","clearInterval","openPhotonLink","tokenAddress","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Date","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/chinmag/src/components/TransactionMonitor.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport {\n  Connection,\n  PublicKey,\n  ParsedTransactionWithMeta,\n  ParsedInstruction,\n  PartiallyDecodedInstruction,\n} from '@solana/web3.js';\n\ninterface TokenInfo {\n  address: string;\n  symbol: string;\n  name: string;\n  amount: number;\n  isInput?: boolean;\n}\n\ninterface Transaction {\n  signature: string;\n  timestamp: number;\n  status: string;\n  inputToken?: TokenInfo;\n  outputToken?: TokenInfo;\n  programName?: string;\n}\n\ninterface TransactionMonitorProps {\n  programId: string;\n}\n\nconst TransactionMonitor: React.FC<TransactionMonitorProps> = ({ programId }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [processedSignatures] = useState<Set<string>>(new Set());\n  const [processedTokens] = useState<Set<string>>(new Set());\n\n  const getTokenInfo = async (mintAddress: string) => {\n    try {\n      const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          mintAccounts: [mintAddress],\n          includeOffChain: true,\n          disableCache: false\n        })\n      });\n      \n      const tokenData = await response.json();\n      if (tokenData && tokenData[0]) {\n        return {\n          address: mintAddress,\n          symbol: tokenData[0].symbol || 'Unknown',\n          name: tokenData[0].name || 'Unknown Token',\n          amount: 0\n        } as TokenInfo;\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error);\n    }\n    return null;\n  };\n\n  const getProgramName = (instruction: ParsedInstruction | PartiallyDecodedInstruction): string => {\n    if ('programId' in instruction) {\n      return instruction.programId.toString();\n    }\n    return 'Unknown';\n  };\n\n  const monitorTransactions = useCallback(async () => {\n    if (loading) return;\n    \n    try {\n      setLoading(true);\n      const connection = new Connection(\n        'https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f',\n        'confirmed'\n      );\n\n      const programPublicKey = new PublicKey(programId);\n      const signatures = await connection.getSignaturesForAddress(\n        programPublicKey,\n        { limit: 10 }\n      );\n\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\n      \n      if (newSignatures.length === 0) {\n        setLoading(false);\n        return;\n      }\n\n      const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n      const newTransactions: Transaction[] = [];\n\n      for (const sig of newSignatures) {\n        try {\n          await delay(500);\n          const tx = await connection.getParsedTransaction(\n            sig.signature,\n            {\n              maxSupportedTransactionVersion: 0,\n              commitment: 'confirmed'\n            }\n          );\n\n          if (tx?.meta && tx.blockTime) {\n            const preTokenBalances = tx.meta.preTokenBalances || [];\n            const postTokenBalances = tx.meta.postTokenBalances || [];\n            \n            const changedTokens = Array.from(new Set([\n              ...preTokenBalances.map(b => b.mint),\n              ...postTokenBalances.map(b => b.mint)\n            ])).filter(mint => !processedTokens.has(mint));\n\n            if (changedTokens.length === 0) continue;\n\n            const tokenInfos: TokenInfo[] = [];\n            \n            for (const mint of changedTokens) {\n              if (!mint) continue;\n              const tokenInfo = await getTokenInfo(mint);\n              if (tokenInfo) {\n                const preBal = preTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\n                const postBal = postTokenBalances.find(b => b.mint === mint)?.uiTokenAmount.uiAmount || 0;\n                const change = postBal - preBal;\n                \n                tokenInfos.push({\n                  ...tokenInfo,\n                  amount: Math.abs(change),\n                  isInput: change < 0\n                });\n                \n                processedTokens.add(mint);\n              }\n            }\n\n            if (tokenInfos.length > 0) {\n              const inputTokens = tokenInfos.filter(t => t.isInput);\n              const outputTokens = tokenInfos.filter(t => !t.isInput);\n\n              const newTx: Transaction = {\n                signature: sig.signature,\n                timestamp: tx.blockTime,\n                status: tx.meta?.err ? 'Failed' : 'Success',\n                inputToken: inputTokens[0],\n                outputToken: outputTokens[0],\n                programName: getProgramName(tx.transaction.message.instructions[0])\n              };\n\n              newTransactions.push(newTx);\n              processedSignatures.add(sig.signature);\n            }\n          }\n        } catch (error) {\n          console.error('Error processing transaction:', sig.signature, error);\n        }\n      }\n\n      if (newTransactions.length > 0) {\n        setTransactions(prevTxs => [...newTransactions, ...prevTxs]);\n      }\n    } catch (error) {\n      console.error('Error in monitorTransactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [programId, processedSignatures, processedTokens, loading]);\n\n  useEffect(() => {\n    setTransactions([]);\n    processedSignatures.clear();\n    processedTokens.clear();\n    monitorTransactions();\n    \n    const interval = setInterval(monitorTransactions, 10000);\n    return () => clearInterval(interval);\n  }, [programId]);\n\n  const openPhotonLink = (tokenAddress: string) => {\n    window.open(`https://photon-sol.tinyastro.io/en/lp/${tokenAddress}`, '_blank');\n  };\n\n  return (\n    <div className=\"transaction-monitor\">\n      <div className=\"monitor-header\">\n        <div className=\"title-section\">\n          <h2>Transaction Monitor</h2>\n          <span className=\"subtitle\">Real-time Solana transaction tracking</span>\n        </div>\n        <div className=\"refresh-container\">\n          <button \n            onClick={monitorTransactions} \n            disabled={loading}\n            className=\"refresh-button\"\n          >\n            {loading ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                Loading\n              </>\n            ) : (\n              <>\n                <span className=\"refresh-icon\">↻</span>\n                Manual Refresh\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n      <div className=\"transactions-list\">\n        {transactions.length === 0 ? (\n          <div className=\"no-transactions\">\n            <p>No transactions found</p>\n            <span className=\"hint\">Click refresh to check for new transactions</span>\n          </div>\n        ) : (\n          transactions.map((tx) => (\n            <div key={tx.signature} className=\"transaction-item\">\n              <div className=\"transaction-header\">\n                <div className=\"timestamp\">\n                  <span className=\"label\">Time:</span>\n                  {new Date(tx.timestamp * 1000).toLocaleString()}\n                </div>\n                <div className={`status ${tx.status === '成功' ? 'success' : 'failed'}`}>\n                  {tx.status === '成功' ? 'Success' : 'Failed'}\n                </div>\n              </div>\n              <div className=\"swap-info\">\n                {tx.inputToken && (\n                  <div className=\"token-info input-token\">\n                    <div className=\"token-amount\">\n                      <span className=\"label\">Paid:</span>\n                      <span className=\"amount\">{tx.inputToken.amount}</span>\n                      <span className=\"symbol\">{tx.inputToken.symbol}</span>\n                    </div>\n                    <button \n                      className=\"photon-link-button\"\n                      onClick={() => openPhotonLink(tx.inputToken!.address)}\n                    >\n                      View on Photon LP\n                      <span className=\"address\">({tx.inputToken.address})</span>\n                    </button>\n                  </div>\n                )}\n                {tx.outputToken && (\n                  <div className=\"token-info output-token\">\n                    <div className=\"token-amount\">\n                      <span className=\"label\">Received:</span>\n                      <span className=\"amount\">{tx.outputToken.amount}</span>\n                      <span className=\"symbol\">{tx.outputToken.symbol}</span>\n                    </div>\n                    <button \n                      className=\"photon-link-button\"\n                      onClick={() => openPhotonLink(tx.outputToken!.address)}\n                    >\n                      View on Photon LP\n                      <span className=\"address\">({tx.outputToken.address})</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n              {tx.programName && (\n                <div className=\"program-name\">\n                  <span className=\"label\">Program:</span>\n                  {tx.programName}\n                </div>\n              )}\n              <div className=\"signature\">\n                <span className=\"label\">Transaction Signature:</span>\n                <span className=\"value\">{tx.signature}</span>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionMonitor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}