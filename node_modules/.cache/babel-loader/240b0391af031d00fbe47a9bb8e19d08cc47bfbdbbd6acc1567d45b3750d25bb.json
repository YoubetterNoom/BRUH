{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\chinmag\\\\src\\\\components\\\\TransactionMonitor.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionMonitor = ({\n  programId\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [processedSignatures] = useState(new Set());\n  const monitorTransactions = useCallback(async () => {\n    try {\n      setLoading(true);\n      const connection = new Connection('https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f', 'confirmed');\n      const programPublicKey = new PublicKey(programId);\n      const signatures = await connection.getSignaturesForAddress(programPublicKey, {\n        limit: 10\n      });\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\n      if (newSignatures.length === 0) {\n        setLoading(false);\n        return;\n      }\n      const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n      const txs = [];\n      for (const sig of newSignatures) {\n        try {\n          await delay(500);\n          const tx = await connection.getParsedTransaction(sig.signature, {\n            maxSupportedTransactionVersion: 0,\n            commitment: 'confirmed'\n          });\n          if (tx !== null && tx !== void 0 && tx.meta && tx.blockTime) {\n            var _tx$meta;\n            let tokens = [];\n            let fromWallet = '';\n            let toWallet = '';\n\n            // 遍历所有指令寻找代币转账\n            for (const instruction of tx.transaction.message.instructions) {\n              if (instruction.program === 'spl-token' && instruction.parsed) {\n                const {\n                  type,\n                  info\n                } = instruction.parsed;\n                if (type === 'transferChecked' || type === 'transfer') {\n                  fromWallet = info.authority || info.source;\n                  toWallet = info.destination;\n\n                  // 获取代币信息\n                  const tokenAddress = info.mint;\n                  try {\n                    const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\n                      method: 'POST',\n                      headers: {\n                        'Content-Type': 'application/json'\n                      },\n                      body: JSON.stringify({\n                        mintAccounts: [tokenAddress],\n                        includeOffChain: true,\n                        disableCache: false\n                      })\n                    });\n                    const tokenData = await response.json();\n                    console.log('Token data:', tokenData); // 调试日志\n\n                    if (tokenData && tokenData[0]) {\n                      var _info$tokenAmount;\n                      tokens.push({\n                        address: tokenAddress,\n                        symbol: tokenData[0].symbol || 'Unknown',\n                        name: tokenData[0].name || 'Unknown Token',\n                        amount: ((_info$tokenAmount = info.tokenAmount) === null || _info$tokenAmount === void 0 ? void 0 : _info$tokenAmount.uiAmount) || 0\n                      });\n                    }\n                  } catch (error) {\n                    console.error('Error fetching token info:', error);\n                  }\n                }\n              }\n            }\n            const instructions = tx.transaction.message.instructions.map(instruction => {\n              if (instruction.program) {\n                var _instruction$parsed;\n                return `Program: ${instruction.program}, Type: ${((_instruction$parsed = instruction.parsed) === null || _instruction$parsed === void 0 ? void 0 : _instruction$parsed.type) || 'Unknown'}`;\n              }\n              return `Program ID: ${instruction.programId.toString()}`;\n            });\n            txs.push({\n              signature: sig.signature,\n              timestamp: tx.blockTime,\n              instructions,\n              status: (_tx$meta = tx.meta) !== null && _tx$meta !== void 0 && _tx$meta.err ? '失败' : '成功',\n              tokens,\n              fromWallet,\n              toWallet\n            });\n            processedSignatures.add(sig.signature);\n          }\n        } catch (error) {\n          console.error('Error fetching transaction:', sig.signature, error);\n        }\n      }\n      setTransactions(prevTxs => [...txs, ...prevTxs]);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [programId, processedSignatures]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-monitor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u4EA4\\u6613\\u76D1\\u63A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: monitorTransactions,\n        disabled: loading,\n        className: \"refresh-button\",\n        children: loading ? '加载中...' : '刷新'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-list\",\n      children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6682\\u65E0\\u4EA4\\u6613\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : transactions.map(tx => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u7B7E\\u540D: \", tx.signature]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u65F6\\u95F4: \", new Date(tx.timestamp * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u72B6\\u6001: \", tx.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), tx.tokens.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tokens-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u4EE3\\u5E01\\u4FE1\\u606F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this), tx.tokens.map((token, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u540D\\u79F0: \", token.name, \" (\", token.symbol, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u6570\\u91CF: \", token.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u4EE3\\u5E01\\u5730\\u5740: \", token.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u53D1\\u9001\\u65B9: \", tx.fromWallet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u63A5\\u6536\\u65B9: \", tx.toWallet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u6307\\u4EE4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tx.instructions.map((instruction, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: instruction\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)]\n      }, tx.signature, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionMonitor, \"mySf0a57V0OVc/TSpgvsFbn4csg=\");\n_c = TransactionMonitor;\nexport default TransactionMonitor;\nvar _c;\n$RefreshReg$(_c, \"TransactionMonitor\");","map":{"version":3,"names":["useState","useCallback","Connection","PublicKey","jsxDEV","_jsxDEV","TransactionMonitor","programId","_s","transactions","setTransactions","loading","setLoading","processedSignatures","Set","monitorTransactions","connection","programPublicKey","signatures","getSignaturesForAddress","limit","newSignatures","filter","sig","has","signature","length","delay","ms","Promise","resolve","setTimeout","txs","tx","getParsedTransaction","maxSupportedTransactionVersion","commitment","meta","blockTime","_tx$meta","tokens","fromWallet","toWallet","instruction","transaction","message","instructions","program","parsed","type","info","authority","source","destination","tokenAddress","mint","response","fetch","method","headers","body","JSON","stringify","mintAccounts","includeOffChain","disableCache","tokenData","json","console","log","_info$tokenAmount","push","address","symbol","name","amount","tokenAmount","uiAmount","error","map","_instruction$parsed","toString","timestamp","status","err","add","prevTxs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Date","toLocaleString","token","i","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/chinmag/src/components/TransactionMonitor.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Connection,\r\n  PublicKey,\r\n  ParsedTransactionWithMeta,\r\n} from '@solana/web3.js';\r\n\r\ninterface TokenInfo {\r\n  address: string;\r\n  symbol: string;\r\n  name: string;\r\n  amount: number;\r\n}\r\n\r\ninterface Transaction {\r\n  signature: string;\r\n  timestamp: number;\r\n  instructions: string[];\r\n  status: string;\r\n  tokens: TokenInfo[];\r\n  fromWallet: string;\r\n  toWallet: string;\r\n}\r\n\r\ninterface TransactionMonitorProps {\r\n  programId: string;\r\n}\r\n\r\nconst TransactionMonitor: React.FC<TransactionMonitorProps> = ({ programId }) => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [processedSignatures] = useState<Set<string>>(new Set());\r\n\r\n  const monitorTransactions = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const connection = new Connection(\r\n        'https://mainnet.helius-rpc.com/?api-key=426605eb-af73-410a-af26-0dc37714935f',\r\n        'confirmed'\r\n      );\r\n\r\n      const programPublicKey = new PublicKey(programId);\r\n      \r\n      const signatures = await connection.getSignaturesForAddress(\r\n        programPublicKey,\r\n        { limit: 10 }\r\n      );\r\n\r\n      const newSignatures = signatures.filter(sig => !processedSignatures.has(sig.signature));\r\n      \r\n      if (newSignatures.length === 0) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n      const txs = [];\r\n\r\n      for (const sig of newSignatures) {\r\n        try {\r\n          await delay(500);\r\n          const tx = await connection.getParsedTransaction(\r\n            sig.signature,\r\n            {\r\n              maxSupportedTransactionVersion: 0,\r\n              commitment: 'confirmed'\r\n            }\r\n          );\r\n          \r\n          if (tx?.meta && tx.blockTime) {\r\n            let tokens: TokenInfo[] = [];\r\n            let fromWallet = '';\r\n            let toWallet = '';\r\n\r\n            // 遍历所有指令寻找代币转账\r\n            for (const instruction of tx.transaction.message.instructions) {\r\n              if (instruction.program === 'spl-token' && instruction.parsed) {\r\n                const { type, info } = instruction.parsed;\r\n                \r\n                if (type === 'transferChecked' || type === 'transfer') {\r\n                  fromWallet = info.authority || info.source;\r\n                  toWallet = info.destination;\r\n                  \r\n                  // 获取代币信息\r\n                  const tokenAddress = info.mint;\r\n                  try {\r\n                    const response = await fetch('https://api.helius.xyz/v0/token-metadata?api-key=426605eb-af73-410a-af26-0dc37714935f', {\r\n                      method: 'POST',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify({\r\n                        mintAccounts: [tokenAddress],\r\n                        includeOffChain: true,\r\n                        disableCache: false\r\n                      })\r\n                    });\r\n                    \r\n                    const tokenData = await response.json();\r\n                    console.log('Token data:', tokenData); // 调试日志\r\n                    \r\n                    if (tokenData && tokenData[0]) {\r\n                      tokens.push({\r\n                        address: tokenAddress,\r\n                        symbol: tokenData[0].symbol || 'Unknown',\r\n                        name: tokenData[0].name || 'Unknown Token',\r\n                        amount: info.tokenAmount?.uiAmount || 0\r\n                      });\r\n                    }\r\n                  } catch (error) {\r\n                    console.error('Error fetching token info:', error);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            const instructions = tx.transaction.message.instructions.map((instruction: any) => {\r\n              if (instruction.program) {\r\n                return `Program: ${instruction.program}, Type: ${instruction.parsed?.type || 'Unknown'}`;\r\n              }\r\n              return `Program ID: ${instruction.programId.toString()}`;\r\n            });\r\n\r\n            txs.push({\r\n              signature: sig.signature,\r\n              timestamp: tx.blockTime,\r\n              instructions,\r\n              status: tx.meta?.err ? '失败' : '成功',\r\n              tokens,\r\n              fromWallet,\r\n              toWallet\r\n            });\r\n            processedSignatures.add(sig.signature);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching transaction:', sig.signature, error);\r\n        }\r\n      }\r\n\r\n      setTransactions(prevTxs => [...txs, ...prevTxs]);\r\n    } catch (error) {\r\n      console.error('Error fetching transactions:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [programId, processedSignatures]);\r\n\r\n  return (\r\n    <div className=\"transaction-monitor\">\r\n      <div className=\"monitor-header\">\r\n        <h2>交易监控</h2>\r\n        <button \r\n          onClick={monitorTransactions} \r\n          disabled={loading}\r\n          className=\"refresh-button\"\r\n        >\r\n          {loading ? '加载中...' : '刷新'}\r\n        </button>\r\n      </div>\r\n      <div className=\"transactions-list\">\r\n        {transactions.length === 0 ? (\r\n          <p>暂无交易</p>\r\n        ) : (\r\n          transactions.map((tx) => (\r\n            <div key={tx.signature} className=\"transaction-item\">\r\n              <p>签名: {tx.signature}</p>\r\n              <p>时间: {new Date(tx.timestamp * 1000).toLocaleString()}</p>\r\n              <p>状态: {tx.status}</p>\r\n              {tx.tokens.length > 0 && (\r\n                <div className=\"tokens-info\">\r\n                  <p>代币信息:</p>\r\n                  {tx.tokens.map((token, i) => (\r\n                    <div key={i} className=\"token-details\">\r\n                      <p>名称: {token.name} ({token.symbol})</p>\r\n                      <p>数量: {token.amount}</p>\r\n                      <p>代币地址: {token.address}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              <p>发送方: {tx.fromWallet}</p>\r\n              <p>接收方: {tx.toWallet}</p>\r\n              <div className=\"instructions\">\r\n                <p>指令:</p>\r\n                <ul>\r\n                  {tx.instructions.map((instruction, i) => (\r\n                    <li key={i}>{instruction}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionMonitor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}